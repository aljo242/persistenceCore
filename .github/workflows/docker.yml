# This workflow builds, scans, adds set of tags on every push/PR to main branch
# and pushes the image to docker hub(only): https://hub.docker.com/repository/docker/persistenceone/persistencecore/
name: Docker CI

# TODO: Manual run for docker image push with tag as input, to merge it with Release workflow OR run this after Release workflow
on:
  push:
    branches:
      - manasi/docker-ci
  workflow_dispatch:
    inputs:
      release_tag:
        type: string
        required: true
        description: Persistence binary version

# NOTE: By default, default action:docker/build-push-action pushes image to Docker hub if registry is not specified
env:
  #Tags
  DOCKER_IMAGE_PATH: persistenceone/persistencecore
  IMAGE_VERSION_TAG: ${{ inputs.release_tag || 'v6.0.0' }}
  RELEASE_TAG:  latest
  DOCKER_FILE_PATH: docker/persistencecore/Dockerfile

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Get short commit SHA
        id: get-commit
        # NOTE: in case of workflow_run/PR/workflow run another release workflow, manage this using github.event.* fields
        # github.event.pull_request.head.sha/github.event.workflow_run.head_sha
        run: |
          if [ "$EVENT" == 'workflow_run' ]
          then
            echo "commit-id=$(git rev-parse --short ${{github.event.workflow_run.head_sha}})" >> $GITHUB_OUTPUT
          else
            echo "commit-id=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          fi
        env:
          EVENT: ${{ github.event_name }}
          REF: ${{ github.ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # get the current date&time for the build & save in GITHUB_OUTPUT OR GITHUB_STATE if required (not much lag)
      - name: Set current date to Github Output
        id: get_date
        run: echo "current_date=$(date +'%Y-%m-%dT%H-%M')" >> $GITHUB_OUTPUT

      # TODO: Add Docker scan(using Snyk token) step after build & before push and publish to Github Actions- Security
      # TODO: Push image w on severity of reported vulnerabilities
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{env.DOCKER_IMAGE_PATH}}:${{env.IMAGE_VERSION_TAG}},${{env.DOCKER_IMAGE_PATH}}:${{env.RELEASE_TAG}},
                ${{env.DOCKER_IMAGE_PATH}}:${{ steps.get_date.outputs.current_date }},
                ${{env.DOCKER_IMAGE_PATH}}:${{ steps.get-commit.outputs.commit-id }}
          file: ${{env.DOCKER_FILE_PATH}}
          platforms: linux/amd64

